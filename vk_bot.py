import datetime
import random
import os
import vk_api

from dotenv import load_dotenv
from vk_api.longpoll import VkLongPoll, VkEventType


def write_msg(user_id, text):
    random_id = random.random()
    vk.method('messages.send', {'user_id': user_id, 'message': text, 'random_id': random_id})


load_dotenv()
vk = vk_api.VkApi(token=os.environ.get("VK_BOT_API"))

longpoll = VkLongPoll(vk)

week_day_list = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
timetable_top_week = ["(8:30-10:05) –ö—É–ª—å—Ç—É—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏–æ–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞"
                      "\n(10:25-12:00) –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞(–ø—Ä.)"
                      "\n (12:30-14:05) –ö–£–õ–¨–¢–£–†–ê –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–û–ì–û –û–ë–©–ï–°–¢–í–ê",

                      "(8:30-10:05) –ü–°–ò–•–û–õ–û–ì. –ú–ï–ñ–õ–ò–ß–ù–û–°–¢. –û–¢–ù–û–®–ï–ù–ò–ô"
                      "\n(10:25-12:00) –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞"
                      "\n (12:30-14:05) –°–ò–°–¢–ï–ú–ù–´–ô –ê–ù–ê–õ–ò–ó –ò –ò–°–°–õ–ï–î–û–í.–û–ü–ï–†–ê–¶–ò–ô"
                      "\n(14:20-15:55) –ú–ê–¢–ï–ú–ê–¢–ò–ß. –ú–û–î–ï–õ–ò –ò–ù–§–û–†–ú–ê–¶–ò–û–ù.–ü–†–û–¶–ï–°–°–û–í –ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø",

                      "(8:30-10:05) -------------------"
                      "\n(10:25-12:00) –§–∏–∑–∏–∫–∞ (–ª–µ–∫.)"
                      "\n (12:30-14:05) –§–∏–∑–∏–∫–∞ (–ª–∞–±.)",

                      "(8:30-10:05) –ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ú–û–î–ï–õ–ò –ò–ù–§.–ü–†. –ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø "
                      "\n(10:25-12:00) –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ª–µ–∫.)"
                      "\n (12:30-14:05) –°–ò–°–¢–ï–ú–ù–´–ô –ê–ù–ê–õ–ò–ó (–ª–∞–±)",

                      "(8:30-10:05) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Ç–µ–æ—Ä–∏—è"
                      "\n(10:25-12:00) –¢–ï–û–†–ò–Ø –≠–õ–ï–ö–¢–†–ò–ß–ï–°–ö–ò–• –¶–ï–ü–ï–ô (–ª–µ–∫.)"
                      "\n (12:30-14:05) –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞"
                      "\n(14:20-15:55) –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è (–ø—Ä.)",

                      '–¢–£–ü–ê –ê–î–´–•–ê–ï–ú',

                      '–¢–£–ü–ê –ê–î–´–•–ê–ï–ú',
                      ]
timetable_bottom_week = ["(8:30-10:05) –°–æ—Ü–∏–æ–ª–æ–≥–∏—è (–ø—Ä.)"
                         "\n(10:25-12:00) –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞(–ø—Ä.)"
                         "\n (12:30-14:05) –¢–µ–æ—Ä–∏—è —ç–ª–µ–∫—Ç—Ä.—Ü–µ–ø–µ–π (–ø—Ä.)"
                         "\n(14:20-15:55) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Ç–µ–æ—Ä–∏—è (–ø—Ä.)",

                         "(8:30-10:05) –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ª–µ—Ü.)"
                         "\n(10:25-12:00) –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞"
                         "\n (12:30-14:05) –°–ò–°–¢–ï–ú–ù–´–ô –ê–ù–ê–õ–ò–ó –ò –ò–°–°–õ–ï–î–û–í.–û–ü–ï–†–ê–¶–ò–ô"
                         "\n(14:20-15:55) –ú–ê–¢–ï–ú–ê–¢–ò–ß. –ú–û–î–ï–õ–ò –ò–ù–§–û–†–ú–ê–¶–ò–û–ù.–ü–†–û–¶–ï–°–°–û–í –ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø",

                         "(8:30-10:05) –°–ò–°–¢–ï–ú–ù–´–ô –ê–ù–ê–õ–ò–ó (–ø—Ä.)"
                         "\n(10:25-12:00) –§–∏–∑–∏–∫–∞ (–ª–µ–∫.)"
                         "\n (12:30-14:05) –§–∏–∑–∏–∫–∞ (–ª–∞–±.)"
                         "\n (14:20-15:55) –§–∏–∑–∏–∫–∞ (–ø—Ä.)",

                         "(8:30-10:05) –°–æ—Ü–∏–æ–ª–æ–≥–∏—è (–ª–µ–∫.)  "
                         "\n(10:25-12:00) –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ª–µ–∫.)"
                         "\n (12:30-14:05) –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (–ª–∞–±.)"
                         "\n (14:20-15:55) –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (–ª–∞–±.)",

                         "(8:30-10:05) –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Ç–µ–æ—Ä–∏—è"
                         "\n(10:25-12:00) –¢–ï–û–†–ò–Ø –≠–õ–ï–ö–¢–†–ò–ß–ï–°–ö–ò–• –¶–ï–ü–ï–ô (–ª–µ–∫.)"
                         "\n (12:30-14:05) –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞"
                         "\n(14:20-15:55) –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ø—Ä.)",

                         '–¢–£–ü–ê –ê–î–´–•–ê–ï–ú',

                         '–¢–£–ü–ê –ê–î–´–•–ê–ï–ú',

                         ]
for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        if event.to_me:
            request = event.text
            day_number = datetime.datetime.now().weekday()
            # day_number = datetime.datetime(2020, 9, 22).weekday()
            print(day_number)
            week_number = datetime.date.isocalendar(datetime.datetime.now())[1]
            # week_number = datetime.datetime.isocalendar(datetime.datetime(2020, 9, 27))[1]
            print(week_number)
            if week_number % 2 == 0:
                timetable = timetable_bottom_week
            else:
                timetable = timetable_top_week
            msg_text = week_day_list[day_number] + ":\n" + timetable[day_number]
            if event.user_id == "381750587":
                msg_text = week_day_list[day_number] + "üíôüíôüíô:\n" + timetable[day_number]
            write_msg(event.user_id, msg_text)
